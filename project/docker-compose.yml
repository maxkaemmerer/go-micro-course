version: "3.6"

services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: broker-service.Dockerfile
    restart: always
    ports:
      - "8080:80"

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: logger-service.Dockerfile
    restart: always

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: listener-service.Dockerfile
    restart: always

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: authentication-service.Dockerfile
    restart: always
    ports:
      - "8081:80"
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  mail-service:
    build:
      context: ./../mail-service
      dockerfile: mail-service.Dockerfile
    restart: always
    environment:
      MAIL_PORT: 1025
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_USERNAME: user
      MAIL_PASSWORD: password
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: Mailer
      MAIL_FROM_ADDRESS: noreply@example.com

  postgres:
    image: "postgres:14.2"
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=users
    volumes:
      - ./dbdata/postgres/:/var/lib/postgresql/data/

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./dbdata/mongo/:/data/db

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: "rabbitmq:3.9-alpine"
    ports:
      - "5672:5672"
    volumes:
      - ./dbdata/rabbitmq/:/var/lib/rabbitmq/
